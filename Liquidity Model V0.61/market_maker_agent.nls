;; Setup for Trader
;********************************************************************************************************************************************************************************
to MM_Setup 
  set typeOfTrader "MarketMakers"
  set speed 1000
  set tradeSpeedAdjustment random 10    set tradeStatus "Transact"
  set orderNumber 0
  set countticks 0
  set tradeAccount 0
  set sharesOwned 0
  set totalBought 0
  set totalSold 0
  set averageBoughtPrice 0
  set averageSoldPrice 0
  set movingAverageDIS 0
  set reversion 0
  set totalCanceled 0
  set buysell "B"
  set modify 0
  set openOrders []
end

;; Distribution of Order Quantity
;********************************************************************************************************************************************************************************
to distOrderMarketMakerBuy
  set tradeQuantity 5 * marketMakerOrderSizeMultipler
  if(sharesOwned > (MarketMakerInventoryLimit / 5))[set tradeQuantity 4 * marketMakerOrderSizeMultipler]
  if(sharesOwned > (MarketMakerInventoryLimit * 2 / 5))[set tradeQuantity 3 * marketMakerOrderSizeMultipler]
  if(sharesOwned > (MarketMakerInventoryLimit * 3 / 5))[set tradeQuantity 2 * marketMakerOrderSizeMultipler]
  if(sharesOwned > (MarketMakerInventoryLimit * 4 / 5))[set tradeQuantity 1 * marketMakerOrderSizeMultipler]
  if(sharesOwned > (MarketMakerInventoryLimit))[set tradeQuantity 0 * marketMakerOrderSizeMultipler]
end

to distOrderMarketMakerSell
  set tradeQuantity 5 * marketMakerOrderSizeMultipler
  if(sharesOwned < (-1 * (MarketMakerInventoryLimit / 5)))[set tradeQuantity 4 * marketMakerOrderSizeMultipler]
  if(sharesOwned < (-1 * (MarketMakerInventoryLimit * 2 / 5)))[set tradeQuantity 3 * marketMakerOrderSizeMultipler]
  if(sharesOwned < (-1 * (MarketMakerInventoryLimit * 3 / 5)))[set tradeQuantity 2 * marketMakerOrderSizeMultipler]
  if(sharesOwned < (-1 * (MarketMakerInventoryLimit * 4 / 5)))[set tradeQuantity 1 * marketMakerOrderSizeMultipler]
  if(sharesOwned < (-1 * (MarketMakerInventoryLimit)))[set tradeQuantity 0 * marketMakerOrderSizeMultipler]
end

;Distribution of Price Selection
;********************************************************************************************************************************************************************************

;Strategy
;********************************************************************************************************************************************************************************
to strategyMedium
  let OrderCheckList table:make
  
  distOrderMarketMakerBuy
  
  table:put OrderCheckList 2 tradeQuantity
  table:put OrderCheckList 3 tradeQuantity
  table:put OrderCheckList 4 tradeQuantity
  table:put OrderCheckList 5 tradeQuantity
  table:put OrderCheckList 6 tradeQuantity
  table:put OrderCheckList 7 tradeQuantity
  table:put OrderCheckList 8 tradeQuantity
  
  distOrderMarketMakerSell
  
  table:put OrderCheckList -2 tradeQuantity
  table:put OrderCheckList -3 tradeQuantity
  table:put OrderCheckList -4 tradeQuantity
  table:put OrderCheckList -5 tradeQuantity
  table:put OrderCheckList -6 tradeQuantity
  table:put OrderCheckList -7 tradeQuantity
  table:put OrderCheckList -8 tradeQuantity
    
  foreach openorders [
    ask ?[
      ifelse OrderB/A = "Buy" [
        let OrderPriceDelta (price - OrderPrice + 1) 
        
        ifelse table:has-key? OrderCheckList OrderPriceDelta [
          
          if OrderQuantity != table:get OrderCheckList OrderPriceDelta [
            set orderNumber (orderNumber + 1)
            set OrderQuantity table:get OrderCheckList OrderPriceDelta
            set PriceOrder (OrderPrice * 100000000000) + orderNumber
            set HON2 HON1
            set HON1 (HON1 + 1)
            
            if(AuditTrail = true)[             
              writetofile OrderID "Modify" OrderPrice OrderQuantity TraderWhoType tradernumber 1 "-" HON1 HON2 
            ]
          ]
          
          table:remove OrderCheckList OrderPriceDelta
        ][
          let OrderCancel OrderQuantity
          ask TraderWho [ set openorders remove ? openorders set totalCanceled (totalCanceled + OrderCancel)]  
          
          if(AuditTrail = true)[
            writetofile OrderID "Cancel" OrderPrice OrderQuantity TraderWhoType tradernumber 1 "-" HON1 HON2
          ]
              
          die
        ]          
      ][
        let OrderPriceDelta (price - OrderPrice - 1) 
        
        ifelse table:has-key? OrderCheckList OrderPriceDelta [
          
          if OrderQuantity != table:get OrderCheckList OrderPriceDelta [
            set orderNumber (orderNumber + 1)
            set OrderQuantity table:get OrderCheckList OrderPriceDelta
            set PriceOrder (OrderPrice * 100000000000) + orderNumber
            set HON2 HON1
            set HON1 (HON1 + 1)
            
            if(AuditTrail = true)[             
              writetofile OrderID "Modify" OrderPrice OrderQuantity TraderWhoType tradernumber 2 "-" HON1 HON2 
            ]
          ]
          
          table:remove OrderCheckList OrderPriceDelta
        ][
          let OrderCancel OrderQuantity
          ask TraderWho [ set openorders remove ? openorders set totalCanceled (totalCanceled + OrderCancel)]  
          
          if(AuditTrail = true)[    
            writetofile OrderID "Cancel" OrderPrice OrderQuantity TraderWhoType tradernumber 2 "-" HON1 HON2
          ]
          
          die
        ] 
      ] 
    ]
  ]
  
  let i -10
  while [i < 11][
   
    let BuySellDecision "0"   
    ifelse i > 0 [
      set BuySellDecision "Buy"
    ][
      set BuySellDecision "Sell"
    ]  
      
    if table:has-key? OrderCheckList i [
      ifelse BuySellDecision = "Buy" [
        hatch-orders 1 [Order_Setup (price - (i - 1)) BuySellDecision traderNumber (table:get OrderCheckList i) myself typeOfTrader]
      ][
        hatch-orders 1 [Order_Setup (price - (i + 1)) BuySellDecision traderNumber (table:get OrderCheckList i) myself typeOfTrader]
      ]
    ]
    set i (i + 1)
  ]
end


;*****************************************************************************************************************************
; Reporting
;*****************************************************************************************************************************

to-report avgSharesMarketMakers
 ifelse((count turtles with [typeOfTrader = "MarketMakers"]) > 0)
 [report precision (((sum [sharesOwned] of traders with [typeOfTrader = "MarketMakers"])) / (count traders with [typeOfTrader = "MarketMakers"]))  2
 ][report 0]
end

to-report accountValueMarketMakers
  ifelse((count turtles with [typeOfTrader = "MarketMakers"]) > 0)
  [report precision ((sum [tradeAccount] of traders with [typeOfTrader = "MarketMakers"]) / (count traders with [typeOfTrader = "MarketMakers"])) 2 
  ][report 0]
end