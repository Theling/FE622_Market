;; Setup for Trader
;********************************************************************************************************************************************************************************
to LS_Setup 
  set typeOfTrader "LiquiditySupplier"
  set speed (random-poisson liquidity_Supplier_Arrival_Rate) + 1
  set tradeSpeedAdjustment (random 30) + 1
  set tradeStatus "Transact"
  set orderNumber 0
  set countticks 0
  set tradeAccount 0
  set sharesOwned 0
  set totalBought 0
  set totalSold 0
  set averageBoughtPrice 0
  set averageSoldPrice 0
  set totalCanceled 0
  set buysell "B"
  set modify 0
  set openOrders []
end

;; Distribution of Order Quantity
;********************************************************************************************************************************************************************************
to distOrderLiquiditySupplierBuy
  let priceChange ((price / 4) - 100) 
  
  let multipleSizePrice (precision ((-1 * priceChange) / PercentPriceChangetoOrderSizeMultiple) 0) + 1
  
  if (multipleSizePrice <= 0) [set multipleSizePrice 1]
  
  let randDraw random 100
  set tradeQuantity 1 * liquiditySupplierOrderSizeMultipler * multipleSizePrice
  if(randDraw > 32)[set tradeQuantity 2 * liquiditySupplierOrderSizeMultipler * multipleSizePrice]
  if(randDraw > 50)[set tradeQuantity 3 * liquiditySupplierOrderSizeMultipler * multipleSizePrice]
  if(randDraw > 63)[set tradeQuantity 4 * liquiditySupplierOrderSizeMultipler * multipleSizePrice]
  if(randDraw > 73)[set tradeQuantity 5 * liquiditySupplierOrderSizeMultipler * multipleSizePrice]
  if(randDraw > 82)[set tradeQuantity 6 * liquiditySupplierOrderSizeMultipler * multipleSizePrice]
  if(randDraw > 94)[set tradeQuantity 7 * liquiditySupplierOrderSizeMultipler * multipleSizePrice]
end

to distOrderLiquiditySupplierSell
  let priceChange ((price / 4) - 100)
  
  let multipleSizePrice (precision ((priceChange) / PercentPriceChangetoOrderSizeMultiple) 0) + 1
  
  if (multipleSizePrice <= 0) [set multipleSizePrice 1]
  
  let randDraw random 100
  set tradeQuantity 1 * liquiditySupplierOrderSizeMultipler * multipleSizePrice
  if(randDraw > 32)[set tradeQuantity 2 * liquiditySupplierOrderSizeMultipler * multipleSizePrice]
  if(randDraw > 50)[set tradeQuantity 3 * liquiditySupplierOrderSizeMultipler * multipleSizePrice]
  if(randDraw > 63)[set tradeQuantity 4 * liquiditySupplierOrderSizeMultipler * multipleSizePrice]
  if(randDraw > 73)[set tradeQuantity 5 * liquiditySupplierOrderSizeMultipler * multipleSizePrice]
  if(randDraw > 82)[set tradeQuantity 6 * liquiditySupplierOrderSizeMultipler * multipleSizePrice]
  if(randDraw > 94)[set tradeQuantity 7 * liquiditySupplierOrderSizeMultipler * multipleSizePrice]
end

;Distribution of Price Selection
;********************************************************************************************************************************************************************************
to distPriceLiquiditySupplierBuy
  let randDraw random 1000
  set tradePrice price - 11
  if(randDraw < 40 and ticks > 5001)[set tradePrice price + 5 ]
  if(randDraw < 80 and randDraw >= 60)[set tradePrice price - 1 ]
  if(randDraw < 110 and randDraw >= 70)[set tradePrice price - 2 ]
  if(randDraw < 160 and randDraw >= 110)[set tradePrice price - 3 ]
  if(randDraw < 200 and randDraw >= 160)[set tradePrice price - 4 ]
  if(randDraw < 260 and randDraw >= 200)[set tradePrice price - 5 ]
  if(randDraw < 320 and randDraw >= 260)[set tradePrice price - 6 ]
  if(randDraw < 390 and randDraw >= 320)[set tradePrice price - 7 ]
  if(randDraw < 480 and randDraw >= 390)[set tradePrice price - 8 ]
  if(randDraw < 600 and randDraw >= 480)[set tradePrice price - 9 ]
  if(randDraw < 760 and randDraw >= 600)[set tradePrice price - 10 ]
end

to distPriceLiquiditySupplierSell
  let randDraw random 1000
  set tradePrice price + 11
  if(randDraw < 20 and ticks > 5001)[set tradePrice price - 5 ]
  if(randDraw < 40 and randDraw >= 20)[set tradePrice price + 1 ]
  if(randDraw < 70 and randDraw >= 40)[set tradePrice price + 2 ]
  if(randDraw < 120 and randDraw >= 70)[set tradePrice price + 3 ]
  if(randDraw < 160 and randDraw >= 120)[set tradePrice price + 4 ]
  if(randDraw < 220 and randDraw >= 160)[set tradePrice price + 5 ]
  if(randDraw < 280 and randDraw >= 220)[set tradePrice price + 6 ]
  if(randDraw < 350 and randDraw >= 280)[set tradePrice price + 7 ]
  if(randDraw < 440 and randDraw >= 350)[set tradePrice price + 8 ]
  if(randDraw < 560 and randDraw >= 440)[set tradePrice price + 9 ]
  if(randDraw < 720 and randDraw >= 560)[set tradePrice price + 10 ]
end

;Strategy
;********************************************************************************************************************************************************************************
to liquiditySupplierStrategy
  foreach openorders [
    ask ?[ 
      if(AuditTrail = true)[
        writetofile OrderID "Cancel" OrderPrice OrderQuantity TraderWhoType tradernumber 1 "-" HON1 HON2
      ]
      die
    ]
  ]
  
  set openorders []
   
  let randDraw random 10000
  ifelse randDraw < 5000 [
     set tradeStatus "Buy"
     distPriceLiquiditySupplierBuy
     distOrderLiquiditySupplierBuy
  ][
     set tradeStatus "Sell"
     distPriceLiquiditySupplierSell
     distOrderLiquiditySupplierSell
  ]
  
  hatch-orders 1 [Order_Setup tradePrice tradeStatus traderNumber tradeQuantity myself typeOfTrader]
end

;*****************************************************************************************************************************
; Reporting
;*****************************************************************************************************************************

to-report avgSharesLiquiditySupplier
 ifelse((count turtles with [typeOfTrader = "LiquiditySupplier"]) > 0)
 [report precision (((sum [sharesOwned] of traders with [typeOfTrader = "LiquiditySupplier"])) / (count traders with [typeOfTrader = "LiquiditySupplier"]))  2
 ][report 0]
end

to-report accountValueLiquiditySupplier
  ifelse((count turtles with [typeOfTrader = "LiquiditySupplier"]) > 0)
  [report precision ((sum [tradeAccount] of traders with [typeOfTrader = "LiquiditySupplier"]) / (count traders with [typeOfTrader = "LiquiditySupplier"])) 2 
  ][report 0]
end